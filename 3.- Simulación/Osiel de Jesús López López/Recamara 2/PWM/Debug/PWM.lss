
PWM.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  000004ae  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000045a  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  000004ae  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000004e0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000520  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000693  00000000  00000000  00000540  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000607  00000000  00000000  00000bd3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000228  00000000  00000000  000011da  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  00001404  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000363  00000000  00000000  00001428  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000003a  00000000  00000000  0000178b  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  000017c5  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 2b 02 	jmp	0x456	; 0x456 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
#include <avr/io.h>
#include "util/delay.h"

int main(void){
	
	DDRD |= (1<<6); // pin 6 del puerto d como salida
  80:	56 9a       	sbi	0x0a, 6	; 10
	DDRC = 0; // puerto c como entrada
  82:	17 b8       	out	0x07, r1	; 7
	OCR0A = 0; // inicializacion del OCR0A (salida PWM en el pin pd6) como 0
  84:	17 bc       	out	0x27, r1	; 39
	TCCR0A |= (1<<COM0A1)|(1<<WGM01)|(1<<WGM00); // configuracion del registro del timer 0 para el tipo de salida PWM
  86:	84 b5       	in	r24, 0x24	; 36
  88:	83 68       	ori	r24, 0x83	; 131
  8a:	84 bd       	out	0x24, r24	; 36
	TCCR0B = 0x01;
  8c:	81 e0       	ldi	r24, 0x01	; 1
  8e:	85 bd       	out	0x25, r24	; 37
	
	ADCSRA = 0x87; // configuracion del registro que se encarga de controlar las acciones del adc
  90:	87 e8       	ldi	r24, 0x87	; 135
  92:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__DATA_REGION_ORIGIN__+0x1a>
	ADMUX = 0x40; // se configura el pin A0 del adc como entrada,la referencia de voltaje,entre otras cosas
  96:	80 e4       	ldi	r24, 0x40	; 64
  98:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__DATA_REGION_ORIGIN__+0x1c>
	float voltaje = 0; // variable que servira para convertir el valor digital a su correspondiente en analogico

	while (1){
		ADCSRA |= (1<<ADSC); // se incia la conversion del adc
  9c:	ca e7       	ldi	r28, 0x7A	; 122
  9e:	d0 e0       	ldi	r29, 0x00	; 0
		while ((ADCSRA & (1<<ADIF))){ // bucle que ordena que mientras se cumpla la condicion realizara lo que a continuacion se describe
			ADCSRA |= (1<<ADIF); // se para la conversion del adc
			voltaje = (ADCL | (ADCH<<8))*5/1024; // se convierte el valor digital a voltaje
  a0:	0f 2e       	mov	r0, r31
  a2:	f8 e7       	ldi	r31, 0x78	; 120
  a4:	ef 2e       	mov	r14, r31
  a6:	f1 2c       	mov	r15, r1
  a8:	f0 2d       	mov	r31, r0
  aa:	09 e7       	ldi	r16, 0x79	; 121
  ac:	10 e0       	ldi	r17, 0x00	; 0
	ADCSRA = 0x87; // configuracion del registro que se encarga de controlar las acciones del adc
	ADMUX = 0x40; // se configura el pin A0 del adc como entrada,la referencia de voltaje,entre otras cosas
	float voltaje = 0; // variable que servira para convertir el valor digital a su correspondiente en analogico

	while (1){
		ADCSRA |= (1<<ADSC); // se incia la conversion del adc
  ae:	88 81       	ld	r24, Y
  b0:	80 64       	ori	r24, 0x40	; 64
  b2:	88 83       	st	Y, r24
		while ((ADCSRA & (1<<ADIF))){ // bucle que ordena que mientras se cumpla la condicion realizara lo que a continuacion se describe
  b4:	88 81       	ld	r24, Y
  b6:	84 ff       	sbrs	r24, 4
  b8:	fa cf       	rjmp	.-12     	; 0xae <main+0x2e>
			ADCSRA |= (1<<ADIF); // se para la conversion del adc
  ba:	88 81       	ld	r24, Y
  bc:	80 61       	ori	r24, 0x10	; 16
  be:	88 83       	st	Y, r24
			voltaje = (ADCL | (ADCH<<8))*5/1024; // se convierte el valor digital a voltaje
  c0:	f7 01       	movw	r30, r14
  c2:	60 81       	ld	r22, Z
  c4:	f8 01       	movw	r30, r16
  c6:	80 81       	ld	r24, Z
			OCR0A = (voltaje*255)/5; // Esta linea de codigo hace que la salida PWM dependa del valor de voltaje que hay a la entrada del micro
  c8:	70 e0       	ldi	r23, 0x00	; 0
  ca:	78 2b       	or	r23, r24
  cc:	cb 01       	movw	r24, r22
  ce:	88 0f       	add	r24, r24
  d0:	99 1f       	adc	r25, r25
  d2:	88 0f       	add	r24, r24
  d4:	99 1f       	adc	r25, r25
  d6:	68 0f       	add	r22, r24
  d8:	79 1f       	adc	r23, r25
  da:	77 23       	and	r23, r23
  dc:	14 f4       	brge	.+4      	; 0xe2 <main+0x62>
  de:	61 50       	subi	r22, 0x01	; 1
  e0:	7c 4f       	sbci	r23, 0xFC	; 252
  e2:	67 2f       	mov	r22, r23
  e4:	77 0f       	add	r23, r23
  e6:	77 0b       	sbc	r23, r23
  e8:	65 95       	asr	r22
  ea:	65 95       	asr	r22
  ec:	07 2e       	mov	r0, r23
  ee:	00 0c       	add	r0, r0
  f0:	88 0b       	sbc	r24, r24
  f2:	99 0b       	sbc	r25, r25
  f4:	0e 94 32 01 	call	0x264	; 0x264 <__floatsisf>
  f8:	20 e0       	ldi	r18, 0x00	; 0
  fa:	30 e0       	ldi	r19, 0x00	; 0
  fc:	4f e7       	ldi	r20, 0x7F	; 127
  fe:	53 e4       	ldi	r21, 0x43	; 67
 100:	0e 94 be 01 	call	0x37c	; 0x37c <__mulsf3>
 104:	20 e0       	ldi	r18, 0x00	; 0
 106:	30 e0       	ldi	r19, 0x00	; 0
 108:	40 ea       	ldi	r20, 0xA0	; 160
 10a:	50 e4       	ldi	r21, 0x40	; 64
 10c:	0e 94 8f 00 	call	0x11e	; 0x11e <__divsf3>
 110:	0e 94 01 01 	call	0x202	; 0x202 <__fixunssfsi>
 114:	67 bd       	out	0x27, r22	; 39
	ADMUX = 0x40; // se configura el pin A0 del adc como entrada,la referencia de voltaje,entre otras cosas
	float voltaje = 0; // variable que servira para convertir el valor digital a su correspondiente en analogico

	while (1){
		ADCSRA |= (1<<ADSC); // se incia la conversion del adc
		while ((ADCSRA & (1<<ADIF))){ // bucle que ordena que mientras se cumpla la condicion realizara lo que a continuacion se describe
 116:	88 81       	ld	r24, Y
 118:	84 fd       	sbrc	r24, 4
 11a:	cf cf       	rjmp	.-98     	; 0xba <main+0x3a>
 11c:	c8 cf       	rjmp	.-112    	; 0xae <main+0x2e>

0000011e <__divsf3>:
 11e:	0e 94 a3 00 	call	0x146	; 0x146 <__divsf3x>
 122:	0c 94 84 01 	jmp	0x308	; 0x308 <__fp_round>
 126:	0e 94 7d 01 	call	0x2fa	; 0x2fa <__fp_pscB>
 12a:	58 f0       	brcs	.+22     	; 0x142 <__divsf3+0x24>
 12c:	0e 94 76 01 	call	0x2ec	; 0x2ec <__fp_pscA>
 130:	40 f0       	brcs	.+16     	; 0x142 <__divsf3+0x24>
 132:	29 f4       	brne	.+10     	; 0x13e <__divsf3+0x20>
 134:	5f 3f       	cpi	r21, 0xFF	; 255
 136:	29 f0       	breq	.+10     	; 0x142 <__divsf3+0x24>
 138:	0c 94 6d 01 	jmp	0x2da	; 0x2da <__fp_inf>
 13c:	51 11       	cpse	r21, r1
 13e:	0c 94 b8 01 	jmp	0x370	; 0x370 <__fp_szero>
 142:	0c 94 73 01 	jmp	0x2e6	; 0x2e6 <__fp_nan>

00000146 <__divsf3x>:
 146:	0e 94 95 01 	call	0x32a	; 0x32a <__fp_split3>
 14a:	68 f3       	brcs	.-38     	; 0x126 <__divsf3+0x8>

0000014c <__divsf3_pse>:
 14c:	99 23       	and	r25, r25
 14e:	b1 f3       	breq	.-20     	; 0x13c <__divsf3+0x1e>
 150:	55 23       	and	r21, r21
 152:	91 f3       	breq	.-28     	; 0x138 <__divsf3+0x1a>
 154:	95 1b       	sub	r25, r21
 156:	55 0b       	sbc	r21, r21
 158:	bb 27       	eor	r27, r27
 15a:	aa 27       	eor	r26, r26
 15c:	62 17       	cp	r22, r18
 15e:	73 07       	cpc	r23, r19
 160:	84 07       	cpc	r24, r20
 162:	38 f0       	brcs	.+14     	; 0x172 <__divsf3_pse+0x26>
 164:	9f 5f       	subi	r25, 0xFF	; 255
 166:	5f 4f       	sbci	r21, 0xFF	; 255
 168:	22 0f       	add	r18, r18
 16a:	33 1f       	adc	r19, r19
 16c:	44 1f       	adc	r20, r20
 16e:	aa 1f       	adc	r26, r26
 170:	a9 f3       	breq	.-22     	; 0x15c <__divsf3_pse+0x10>
 172:	35 d0       	rcall	.+106    	; 0x1de <__divsf3_pse+0x92>
 174:	0e 2e       	mov	r0, r30
 176:	3a f0       	brmi	.+14     	; 0x186 <__divsf3_pse+0x3a>
 178:	e0 e8       	ldi	r30, 0x80	; 128
 17a:	32 d0       	rcall	.+100    	; 0x1e0 <__divsf3_pse+0x94>
 17c:	91 50       	subi	r25, 0x01	; 1
 17e:	50 40       	sbci	r21, 0x00	; 0
 180:	e6 95       	lsr	r30
 182:	00 1c       	adc	r0, r0
 184:	ca f7       	brpl	.-14     	; 0x178 <__divsf3_pse+0x2c>
 186:	2b d0       	rcall	.+86     	; 0x1de <__divsf3_pse+0x92>
 188:	fe 2f       	mov	r31, r30
 18a:	29 d0       	rcall	.+82     	; 0x1de <__divsf3_pse+0x92>
 18c:	66 0f       	add	r22, r22
 18e:	77 1f       	adc	r23, r23
 190:	88 1f       	adc	r24, r24
 192:	bb 1f       	adc	r27, r27
 194:	26 17       	cp	r18, r22
 196:	37 07       	cpc	r19, r23
 198:	48 07       	cpc	r20, r24
 19a:	ab 07       	cpc	r26, r27
 19c:	b0 e8       	ldi	r27, 0x80	; 128
 19e:	09 f0       	breq	.+2      	; 0x1a2 <__divsf3_pse+0x56>
 1a0:	bb 0b       	sbc	r27, r27
 1a2:	80 2d       	mov	r24, r0
 1a4:	bf 01       	movw	r22, r30
 1a6:	ff 27       	eor	r31, r31
 1a8:	93 58       	subi	r25, 0x83	; 131
 1aa:	5f 4f       	sbci	r21, 0xFF	; 255
 1ac:	3a f0       	brmi	.+14     	; 0x1bc <__divsf3_pse+0x70>
 1ae:	9e 3f       	cpi	r25, 0xFE	; 254
 1b0:	51 05       	cpc	r21, r1
 1b2:	78 f0       	brcs	.+30     	; 0x1d2 <__divsf3_pse+0x86>
 1b4:	0c 94 6d 01 	jmp	0x2da	; 0x2da <__fp_inf>
 1b8:	0c 94 b8 01 	jmp	0x370	; 0x370 <__fp_szero>
 1bc:	5f 3f       	cpi	r21, 0xFF	; 255
 1be:	e4 f3       	brlt	.-8      	; 0x1b8 <__divsf3_pse+0x6c>
 1c0:	98 3e       	cpi	r25, 0xE8	; 232
 1c2:	d4 f3       	brlt	.-12     	; 0x1b8 <__divsf3_pse+0x6c>
 1c4:	86 95       	lsr	r24
 1c6:	77 95       	ror	r23
 1c8:	67 95       	ror	r22
 1ca:	b7 95       	ror	r27
 1cc:	f7 95       	ror	r31
 1ce:	9f 5f       	subi	r25, 0xFF	; 255
 1d0:	c9 f7       	brne	.-14     	; 0x1c4 <__divsf3_pse+0x78>
 1d2:	88 0f       	add	r24, r24
 1d4:	91 1d       	adc	r25, r1
 1d6:	96 95       	lsr	r25
 1d8:	87 95       	ror	r24
 1da:	97 f9       	bld	r25, 7
 1dc:	08 95       	ret
 1de:	e1 e0       	ldi	r30, 0x01	; 1
 1e0:	66 0f       	add	r22, r22
 1e2:	77 1f       	adc	r23, r23
 1e4:	88 1f       	adc	r24, r24
 1e6:	bb 1f       	adc	r27, r27
 1e8:	62 17       	cp	r22, r18
 1ea:	73 07       	cpc	r23, r19
 1ec:	84 07       	cpc	r24, r20
 1ee:	ba 07       	cpc	r27, r26
 1f0:	20 f0       	brcs	.+8      	; 0x1fa <__divsf3_pse+0xae>
 1f2:	62 1b       	sub	r22, r18
 1f4:	73 0b       	sbc	r23, r19
 1f6:	84 0b       	sbc	r24, r20
 1f8:	ba 0b       	sbc	r27, r26
 1fa:	ee 1f       	adc	r30, r30
 1fc:	88 f7       	brcc	.-30     	; 0x1e0 <__divsf3_pse+0x94>
 1fe:	e0 95       	com	r30
 200:	08 95       	ret

00000202 <__fixunssfsi>:
 202:	0e 94 9d 01 	call	0x33a	; 0x33a <__fp_splitA>
 206:	88 f0       	brcs	.+34     	; 0x22a <__fixunssfsi+0x28>
 208:	9f 57       	subi	r25, 0x7F	; 127
 20a:	98 f0       	brcs	.+38     	; 0x232 <__fixunssfsi+0x30>
 20c:	b9 2f       	mov	r27, r25
 20e:	99 27       	eor	r25, r25
 210:	b7 51       	subi	r27, 0x17	; 23
 212:	b0 f0       	brcs	.+44     	; 0x240 <__fixunssfsi+0x3e>
 214:	e1 f0       	breq	.+56     	; 0x24e <__fixunssfsi+0x4c>
 216:	66 0f       	add	r22, r22
 218:	77 1f       	adc	r23, r23
 21a:	88 1f       	adc	r24, r24
 21c:	99 1f       	adc	r25, r25
 21e:	1a f0       	brmi	.+6      	; 0x226 <__fixunssfsi+0x24>
 220:	ba 95       	dec	r27
 222:	c9 f7       	brne	.-14     	; 0x216 <__fixunssfsi+0x14>
 224:	14 c0       	rjmp	.+40     	; 0x24e <__fixunssfsi+0x4c>
 226:	b1 30       	cpi	r27, 0x01	; 1
 228:	91 f0       	breq	.+36     	; 0x24e <__fixunssfsi+0x4c>
 22a:	0e 94 b7 01 	call	0x36e	; 0x36e <__fp_zero>
 22e:	b1 e0       	ldi	r27, 0x01	; 1
 230:	08 95       	ret
 232:	0c 94 b7 01 	jmp	0x36e	; 0x36e <__fp_zero>
 236:	67 2f       	mov	r22, r23
 238:	78 2f       	mov	r23, r24
 23a:	88 27       	eor	r24, r24
 23c:	b8 5f       	subi	r27, 0xF8	; 248
 23e:	39 f0       	breq	.+14     	; 0x24e <__fixunssfsi+0x4c>
 240:	b9 3f       	cpi	r27, 0xF9	; 249
 242:	cc f3       	brlt	.-14     	; 0x236 <__fixunssfsi+0x34>
 244:	86 95       	lsr	r24
 246:	77 95       	ror	r23
 248:	67 95       	ror	r22
 24a:	b3 95       	inc	r27
 24c:	d9 f7       	brne	.-10     	; 0x244 <__fixunssfsi+0x42>
 24e:	3e f4       	brtc	.+14     	; 0x25e <__fixunssfsi+0x5c>
 250:	90 95       	com	r25
 252:	80 95       	com	r24
 254:	70 95       	com	r23
 256:	61 95       	neg	r22
 258:	7f 4f       	sbci	r23, 0xFF	; 255
 25a:	8f 4f       	sbci	r24, 0xFF	; 255
 25c:	9f 4f       	sbci	r25, 0xFF	; 255
 25e:	08 95       	ret

00000260 <__floatunsisf>:
 260:	e8 94       	clt
 262:	09 c0       	rjmp	.+18     	; 0x276 <__floatsisf+0x12>

00000264 <__floatsisf>:
 264:	97 fb       	bst	r25, 7
 266:	3e f4       	brtc	.+14     	; 0x276 <__floatsisf+0x12>
 268:	90 95       	com	r25
 26a:	80 95       	com	r24
 26c:	70 95       	com	r23
 26e:	61 95       	neg	r22
 270:	7f 4f       	sbci	r23, 0xFF	; 255
 272:	8f 4f       	sbci	r24, 0xFF	; 255
 274:	9f 4f       	sbci	r25, 0xFF	; 255
 276:	99 23       	and	r25, r25
 278:	a9 f0       	breq	.+42     	; 0x2a4 <__floatsisf+0x40>
 27a:	f9 2f       	mov	r31, r25
 27c:	96 e9       	ldi	r25, 0x96	; 150
 27e:	bb 27       	eor	r27, r27
 280:	93 95       	inc	r25
 282:	f6 95       	lsr	r31
 284:	87 95       	ror	r24
 286:	77 95       	ror	r23
 288:	67 95       	ror	r22
 28a:	b7 95       	ror	r27
 28c:	f1 11       	cpse	r31, r1
 28e:	f8 cf       	rjmp	.-16     	; 0x280 <__floatsisf+0x1c>
 290:	fa f4       	brpl	.+62     	; 0x2d0 <__floatsisf+0x6c>
 292:	bb 0f       	add	r27, r27
 294:	11 f4       	brne	.+4      	; 0x29a <__floatsisf+0x36>
 296:	60 ff       	sbrs	r22, 0
 298:	1b c0       	rjmp	.+54     	; 0x2d0 <__floatsisf+0x6c>
 29a:	6f 5f       	subi	r22, 0xFF	; 255
 29c:	7f 4f       	sbci	r23, 0xFF	; 255
 29e:	8f 4f       	sbci	r24, 0xFF	; 255
 2a0:	9f 4f       	sbci	r25, 0xFF	; 255
 2a2:	16 c0       	rjmp	.+44     	; 0x2d0 <__floatsisf+0x6c>
 2a4:	88 23       	and	r24, r24
 2a6:	11 f0       	breq	.+4      	; 0x2ac <__floatsisf+0x48>
 2a8:	96 e9       	ldi	r25, 0x96	; 150
 2aa:	11 c0       	rjmp	.+34     	; 0x2ce <__floatsisf+0x6a>
 2ac:	77 23       	and	r23, r23
 2ae:	21 f0       	breq	.+8      	; 0x2b8 <__floatsisf+0x54>
 2b0:	9e e8       	ldi	r25, 0x8E	; 142
 2b2:	87 2f       	mov	r24, r23
 2b4:	76 2f       	mov	r23, r22
 2b6:	05 c0       	rjmp	.+10     	; 0x2c2 <__floatsisf+0x5e>
 2b8:	66 23       	and	r22, r22
 2ba:	71 f0       	breq	.+28     	; 0x2d8 <__floatsisf+0x74>
 2bc:	96 e8       	ldi	r25, 0x86	; 134
 2be:	86 2f       	mov	r24, r22
 2c0:	70 e0       	ldi	r23, 0x00	; 0
 2c2:	60 e0       	ldi	r22, 0x00	; 0
 2c4:	2a f0       	brmi	.+10     	; 0x2d0 <__floatsisf+0x6c>
 2c6:	9a 95       	dec	r25
 2c8:	66 0f       	add	r22, r22
 2ca:	77 1f       	adc	r23, r23
 2cc:	88 1f       	adc	r24, r24
 2ce:	da f7       	brpl	.-10     	; 0x2c6 <__floatsisf+0x62>
 2d0:	88 0f       	add	r24, r24
 2d2:	96 95       	lsr	r25
 2d4:	87 95       	ror	r24
 2d6:	97 f9       	bld	r25, 7
 2d8:	08 95       	ret

000002da <__fp_inf>:
 2da:	97 f9       	bld	r25, 7
 2dc:	9f 67       	ori	r25, 0x7F	; 127
 2de:	80 e8       	ldi	r24, 0x80	; 128
 2e0:	70 e0       	ldi	r23, 0x00	; 0
 2e2:	60 e0       	ldi	r22, 0x00	; 0
 2e4:	08 95       	ret

000002e6 <__fp_nan>:
 2e6:	9f ef       	ldi	r25, 0xFF	; 255
 2e8:	80 ec       	ldi	r24, 0xC0	; 192
 2ea:	08 95       	ret

000002ec <__fp_pscA>:
 2ec:	00 24       	eor	r0, r0
 2ee:	0a 94       	dec	r0
 2f0:	16 16       	cp	r1, r22
 2f2:	17 06       	cpc	r1, r23
 2f4:	18 06       	cpc	r1, r24
 2f6:	09 06       	cpc	r0, r25
 2f8:	08 95       	ret

000002fa <__fp_pscB>:
 2fa:	00 24       	eor	r0, r0
 2fc:	0a 94       	dec	r0
 2fe:	12 16       	cp	r1, r18
 300:	13 06       	cpc	r1, r19
 302:	14 06       	cpc	r1, r20
 304:	05 06       	cpc	r0, r21
 306:	08 95       	ret

00000308 <__fp_round>:
 308:	09 2e       	mov	r0, r25
 30a:	03 94       	inc	r0
 30c:	00 0c       	add	r0, r0
 30e:	11 f4       	brne	.+4      	; 0x314 <__fp_round+0xc>
 310:	88 23       	and	r24, r24
 312:	52 f0       	brmi	.+20     	; 0x328 <__fp_round+0x20>
 314:	bb 0f       	add	r27, r27
 316:	40 f4       	brcc	.+16     	; 0x328 <__fp_round+0x20>
 318:	bf 2b       	or	r27, r31
 31a:	11 f4       	brne	.+4      	; 0x320 <__fp_round+0x18>
 31c:	60 ff       	sbrs	r22, 0
 31e:	04 c0       	rjmp	.+8      	; 0x328 <__fp_round+0x20>
 320:	6f 5f       	subi	r22, 0xFF	; 255
 322:	7f 4f       	sbci	r23, 0xFF	; 255
 324:	8f 4f       	sbci	r24, 0xFF	; 255
 326:	9f 4f       	sbci	r25, 0xFF	; 255
 328:	08 95       	ret

0000032a <__fp_split3>:
 32a:	57 fd       	sbrc	r21, 7
 32c:	90 58       	subi	r25, 0x80	; 128
 32e:	44 0f       	add	r20, r20
 330:	55 1f       	adc	r21, r21
 332:	59 f0       	breq	.+22     	; 0x34a <__fp_splitA+0x10>
 334:	5f 3f       	cpi	r21, 0xFF	; 255
 336:	71 f0       	breq	.+28     	; 0x354 <__fp_splitA+0x1a>
 338:	47 95       	ror	r20

0000033a <__fp_splitA>:
 33a:	88 0f       	add	r24, r24
 33c:	97 fb       	bst	r25, 7
 33e:	99 1f       	adc	r25, r25
 340:	61 f0       	breq	.+24     	; 0x35a <__fp_splitA+0x20>
 342:	9f 3f       	cpi	r25, 0xFF	; 255
 344:	79 f0       	breq	.+30     	; 0x364 <__fp_splitA+0x2a>
 346:	87 95       	ror	r24
 348:	08 95       	ret
 34a:	12 16       	cp	r1, r18
 34c:	13 06       	cpc	r1, r19
 34e:	14 06       	cpc	r1, r20
 350:	55 1f       	adc	r21, r21
 352:	f2 cf       	rjmp	.-28     	; 0x338 <__fp_split3+0xe>
 354:	46 95       	lsr	r20
 356:	f1 df       	rcall	.-30     	; 0x33a <__fp_splitA>
 358:	08 c0       	rjmp	.+16     	; 0x36a <__fp_splitA+0x30>
 35a:	16 16       	cp	r1, r22
 35c:	17 06       	cpc	r1, r23
 35e:	18 06       	cpc	r1, r24
 360:	99 1f       	adc	r25, r25
 362:	f1 cf       	rjmp	.-30     	; 0x346 <__fp_splitA+0xc>
 364:	86 95       	lsr	r24
 366:	71 05       	cpc	r23, r1
 368:	61 05       	cpc	r22, r1
 36a:	08 94       	sec
 36c:	08 95       	ret

0000036e <__fp_zero>:
 36e:	e8 94       	clt

00000370 <__fp_szero>:
 370:	bb 27       	eor	r27, r27
 372:	66 27       	eor	r22, r22
 374:	77 27       	eor	r23, r23
 376:	cb 01       	movw	r24, r22
 378:	97 f9       	bld	r25, 7
 37a:	08 95       	ret

0000037c <__mulsf3>:
 37c:	0e 94 d1 01 	call	0x3a2	; 0x3a2 <__mulsf3x>
 380:	0c 94 84 01 	jmp	0x308	; 0x308 <__fp_round>
 384:	0e 94 76 01 	call	0x2ec	; 0x2ec <__fp_pscA>
 388:	38 f0       	brcs	.+14     	; 0x398 <__mulsf3+0x1c>
 38a:	0e 94 7d 01 	call	0x2fa	; 0x2fa <__fp_pscB>
 38e:	20 f0       	brcs	.+8      	; 0x398 <__mulsf3+0x1c>
 390:	95 23       	and	r25, r21
 392:	11 f0       	breq	.+4      	; 0x398 <__mulsf3+0x1c>
 394:	0c 94 6d 01 	jmp	0x2da	; 0x2da <__fp_inf>
 398:	0c 94 73 01 	jmp	0x2e6	; 0x2e6 <__fp_nan>
 39c:	11 24       	eor	r1, r1
 39e:	0c 94 b8 01 	jmp	0x370	; 0x370 <__fp_szero>

000003a2 <__mulsf3x>:
 3a2:	0e 94 95 01 	call	0x32a	; 0x32a <__fp_split3>
 3a6:	70 f3       	brcs	.-36     	; 0x384 <__mulsf3+0x8>

000003a8 <__mulsf3_pse>:
 3a8:	95 9f       	mul	r25, r21
 3aa:	c1 f3       	breq	.-16     	; 0x39c <__mulsf3+0x20>
 3ac:	95 0f       	add	r25, r21
 3ae:	50 e0       	ldi	r21, 0x00	; 0
 3b0:	55 1f       	adc	r21, r21
 3b2:	62 9f       	mul	r22, r18
 3b4:	f0 01       	movw	r30, r0
 3b6:	72 9f       	mul	r23, r18
 3b8:	bb 27       	eor	r27, r27
 3ba:	f0 0d       	add	r31, r0
 3bc:	b1 1d       	adc	r27, r1
 3be:	63 9f       	mul	r22, r19
 3c0:	aa 27       	eor	r26, r26
 3c2:	f0 0d       	add	r31, r0
 3c4:	b1 1d       	adc	r27, r1
 3c6:	aa 1f       	adc	r26, r26
 3c8:	64 9f       	mul	r22, r20
 3ca:	66 27       	eor	r22, r22
 3cc:	b0 0d       	add	r27, r0
 3ce:	a1 1d       	adc	r26, r1
 3d0:	66 1f       	adc	r22, r22
 3d2:	82 9f       	mul	r24, r18
 3d4:	22 27       	eor	r18, r18
 3d6:	b0 0d       	add	r27, r0
 3d8:	a1 1d       	adc	r26, r1
 3da:	62 1f       	adc	r22, r18
 3dc:	73 9f       	mul	r23, r19
 3de:	b0 0d       	add	r27, r0
 3e0:	a1 1d       	adc	r26, r1
 3e2:	62 1f       	adc	r22, r18
 3e4:	83 9f       	mul	r24, r19
 3e6:	a0 0d       	add	r26, r0
 3e8:	61 1d       	adc	r22, r1
 3ea:	22 1f       	adc	r18, r18
 3ec:	74 9f       	mul	r23, r20
 3ee:	33 27       	eor	r19, r19
 3f0:	a0 0d       	add	r26, r0
 3f2:	61 1d       	adc	r22, r1
 3f4:	23 1f       	adc	r18, r19
 3f6:	84 9f       	mul	r24, r20
 3f8:	60 0d       	add	r22, r0
 3fa:	21 1d       	adc	r18, r1
 3fc:	82 2f       	mov	r24, r18
 3fe:	76 2f       	mov	r23, r22
 400:	6a 2f       	mov	r22, r26
 402:	11 24       	eor	r1, r1
 404:	9f 57       	subi	r25, 0x7F	; 127
 406:	50 40       	sbci	r21, 0x00	; 0
 408:	9a f0       	brmi	.+38     	; 0x430 <__LOCK_REGION_LENGTH__+0x30>
 40a:	f1 f0       	breq	.+60     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 40c:	88 23       	and	r24, r24
 40e:	4a f0       	brmi	.+18     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
 410:	ee 0f       	add	r30, r30
 412:	ff 1f       	adc	r31, r31
 414:	bb 1f       	adc	r27, r27
 416:	66 1f       	adc	r22, r22
 418:	77 1f       	adc	r23, r23
 41a:	88 1f       	adc	r24, r24
 41c:	91 50       	subi	r25, 0x01	; 1
 41e:	50 40       	sbci	r21, 0x00	; 0
 420:	a9 f7       	brne	.-22     	; 0x40c <__LOCK_REGION_LENGTH__+0xc>
 422:	9e 3f       	cpi	r25, 0xFE	; 254
 424:	51 05       	cpc	r21, r1
 426:	80 f0       	brcs	.+32     	; 0x448 <__LOCK_REGION_LENGTH__+0x48>
 428:	0c 94 6d 01 	jmp	0x2da	; 0x2da <__fp_inf>
 42c:	0c 94 b8 01 	jmp	0x370	; 0x370 <__fp_szero>
 430:	5f 3f       	cpi	r21, 0xFF	; 255
 432:	e4 f3       	brlt	.-8      	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 434:	98 3e       	cpi	r25, 0xE8	; 232
 436:	d4 f3       	brlt	.-12     	; 0x42c <__LOCK_REGION_LENGTH__+0x2c>
 438:	86 95       	lsr	r24
 43a:	77 95       	ror	r23
 43c:	67 95       	ror	r22
 43e:	b7 95       	ror	r27
 440:	f7 95       	ror	r31
 442:	e7 95       	ror	r30
 444:	9f 5f       	subi	r25, 0xFF	; 255
 446:	c1 f7       	brne	.-16     	; 0x438 <__LOCK_REGION_LENGTH__+0x38>
 448:	fe 2b       	or	r31, r30
 44a:	88 0f       	add	r24, r24
 44c:	91 1d       	adc	r25, r1
 44e:	96 95       	lsr	r25
 450:	87 95       	ror	r24
 452:	97 f9       	bld	r25, 7
 454:	08 95       	ret

00000456 <_exit>:
 456:	f8 94       	cli

00000458 <__stop_program>:
 458:	ff cf       	rjmp	.-2      	; 0x458 <__stop_program>
